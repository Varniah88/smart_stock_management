version: 0.2

env:
  variables:
    ECR_REGISTRY: 003380495206.dkr.ecr.ap-southeast-2.amazonaws.com

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Installing dependencies
      - npm install

  pre_build:
    commands:
      - echo Logging in to Amazon ECR
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

  build:
    commands:
      - echo Building Node.js image
      - docker build -t nodejs-app:$IMAGE_TAG ./nodejs-app
      - docker tag nodejs-app:$IMAGE_TAG $ECR_REGISTRY/nodejs-app:$IMAGE_TAG
      - docker tag nodejs-app:$IMAGE_TAG $ECR_REGISTRY/nodejs-app:latest

      - echo Building MQTT image
      - docker build -t mqtt-broker:$IMAGE_TAG ./mqtt
      - docker tag mqtt-broker:$IMAGE_TAG $ECR_REGISTRY/mqtt-broker:$IMAGE_TAG
      - docker tag mqtt-broker:$IMAGE_TAG $ECR_REGISTRY/mqtt-broker:latest

      - echo Building Node-RED image
      - docker build -t nodered:$IMAGE_TAG ./nodered
      - docker tag nodered:$IMAGE_TAG $ECR_REGISTRY/nodered:$IMAGE_TAG
      - docker tag nodered:$IMAGE_TAG $ECR_REGISTRY/nodered:latest

  post_build:
    commands:
      - echo Pushing images to ECR
      - docker push $ECR_REGISTRY/nodejs-app:$IMAGE_TAG
      - docker push $ECR_REGISTRY/nodejs-app:latest
      - docker push $ECR_REGISTRY/mqtt-broker:$IMAGE_TAG
      - docker push $ECR_REGISTRY/mqtt-broker:latest
      - docker push $ECR_REGISTRY/nodered:$IMAGE_TAG
      - docker push $ECR_REGISTRY/nodered:latest

      - echo Writing image definitions for ECS
      - printf '[{"name":"nodejs-app","imageUri":"%s"},{"name":"mqtt","imageUri":"%s"},{"name":"nodered","imageUri":"%s"}]' \
          $ECR_REGISTRY/nodejs-app:$IMAGE_TAG \
          $ECR_REGISTRY/mqtt-broker:$IMAGE_TAG \
          $ECR_REGISTRY/nodered:$IMAGE_TAG \
          > imagedefinitions.json

artifacts:
  files: imagedefinitions.json
